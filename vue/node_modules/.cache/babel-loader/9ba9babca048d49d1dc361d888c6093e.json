{"remainingRequest":"/Users/mango/Desktop/Dev/Web/hh2019-web/node_modules/babel-loader/lib/index.js!/Users/mango/Desktop/Dev/Web/hh2019-web/node_modules/eslint-loader/index.js??ref--13-0!/Users/mango/Desktop/Dev/Web/hh2019-web/src/store/FoodData.js","dependencies":[{"path":"/Users/mango/Desktop/Dev/Web/hh2019-web/src/store/FoodData.js","mtime":1552175527811},{"path":"/Users/mango/Desktop/Dev/Web/hh2019-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mango/Desktop/Dev/Web/hh2019-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mango/Desktop/Dev/Web/hh2019-web/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport API from \"../Util/API\";\nimport { URLs } from \"../Config\";\nexport default {\n  state: {\n    food_items: [],\n    currentFoodItem: {},\n    locationURL: URLs.API_BASE_URL + URLs.ALL_ITEMS\n  },\n  getters: {\n    getItemsPage: function getItemsPage(state) {\n      return function (index) {\n        var itemsPerPage = 30;\n        var i = index * itemsPerPage;\n        var j = i + itemsPerPage;\n        console.log(state.food_items[0].name);\n        return state.food_items.slice(i, j);\n      };\n    }\n  },\n  mutations: {\n    initializeFoodData: function initializeFoodData(state, new_data) {\n      state.food_items = new_data;\n    },\n    setCurrentFoodItem: function setCurrentFoodItem(state, data) {\n      state.currentFoodItem = data;\n    },\n    setURL: function setURL(state, url) {\n      state.locationURL = URLs.API_BASE_URL + url;\n    },\n    resetData: function resetData(state) {\n      state.food_items = [];\n    }\n  },\n  actions: {\n    getData: function getData(_ref) {\n      var state = _ref.state,\n          commit = _ref.commit;\n      // dispatch(\"toggleLoader\");\n      // commit(\"toggleLoader\", null, { root: true });\n      // API.getAllFood(response => {\n      //   commit(\"initializeFoodData\", response);\n      //   console.log(response.length);\n      //   commit(\"toggleLoader\", null, { root: true });\n      // });\n      commit(\"toggleLoader\", null, {\n        root: true\n      });\n      API.getFood(state.locationURL, function (response) {\n        commit(\"initializeFoodData\", response);\n        console.log(response.length);\n        commit(\"toggleLoader\", null, {\n          root: true\n        });\n      });\n    },\n    sortBy: function sortBy(_ref2, _ref3) {\n      var state = _ref2.state,\n          commit = _ref2.commit;\n      var less_than = _ref3.less_than,\n          field = _ref3.field,\n          amount = _ref3.amount;\n      commit(\"toggleLoader\", null, {\n        root: true\n      });\n      API.sortBy(less_than, field, amount, function (data) {\n        commit(\"initializeFoodData\", data);\n        commit(\"toggleLoader\", null, {\n          root: true\n        });\n      });\n    }\n  }\n};",{"version":3,"sources":["/Users/mango/Desktop/Dev/Web/hh2019-web/src/store/FoodData.js"],"names":["API","URLs","state","food_items","currentFoodItem","locationURL","API_BASE_URL","ALL_ITEMS","getters","getItemsPage","index","itemsPerPage","i","j","console","log","name","slice","mutations","initializeFoodData","new_data","setCurrentFoodItem","data","setURL","url","resetData","actions","getData","commit","root","getFood","response","length","sortBy","less_than","field","amount"],"mappings":"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","sourcesContent":["import API from \"../Util/API\";\nimport { URLs } from \"../Config\";\n\nexport default {\n  state: {\n    food_items: [],\n    currentFoodItem: {},\n    locationURL: URLs.API_BASE_URL + URLs.ALL_ITEMS\n  },\n  getters: {\n    getItemsPage: state => index => {\n      const itemsPerPage = 30;\n      const i = index * itemsPerPage;\n      const j = i + itemsPerPage;\n      console.log(state.food_items[0].name);\n      return state.food_items.slice(i, j);\n    }\n  },\n  mutations: {\n    initializeFoodData(state, new_data) {\n      state.food_items = new_data;\n    },\n    setCurrentFoodItem(state, data) {\n      state.currentFoodItem = data;\n    },\n    setURL(state, url) {\n      state.locationURL = URLs.API_BASE_URL + url;\n    },\n    resetData(state) {\n      state.food_items = [];\n    }\n  },\n  actions: {\n    getData({ state, commit }) {\n      // dispatch(\"toggleLoader\");\n      // commit(\"toggleLoader\", null, { root: true });\n\n      // API.getAllFood(response => {\n      //   commit(\"initializeFoodData\", response);\n      //   console.log(response.length);\n      //   commit(\"toggleLoader\", null, { root: true });\n      // });\n\n      commit(\"toggleLoader\", null, { root: true });\n      API.getFood(state.locationURL, response => {\n        commit(\"initializeFoodData\", response);\n        console.log(response.length);\n        commit(\"toggleLoader\", null, { root: true });\n      });\n    },\n    sortBy({ state, commit }, { less_than, field, amount }) {\n      commit(\"toggleLoader\", null, { root: true });\n      API.sortBy(less_than, field, amount, data => {\n        commit(\"initializeFoodData\", data);\n        commit(\"toggleLoader\", null, { root: true });\n      });\n    }\n  }\n};\n"]}]}